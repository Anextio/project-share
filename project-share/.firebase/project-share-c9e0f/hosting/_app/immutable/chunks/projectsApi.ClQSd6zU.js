import{c as n,b as c,g as a,q as d,w as u,d as w,f as P,i as y,l,h as m}from"./firebase.DhvNsPg9.js";import{g as S,b as q,a as R,c as A}from"./tagsApi.Drm_6kqI.js";async function B(){try{const t=new Date;t.setDate(t.getDate()-7);const e=n(c,"projects"),r=n(c,"discussions"),o=d(r,u("createdAt",">=",t),y("createdAt","desc")),s=(await a(o)).docs.map(p=>p.data().projectId);let i=[];if(s.length>0){const p=d(e,u("id","in",s),y("discussionCount","desc"),l(3));i=(await a(p)).docs.map(j=>({id:j.id,...j.data()}))}if(i.length<3){const p=d(e,y("createdAt","desc"),l(3-i.length)),j=(await a(p)).docs.map(h=>({id:h.id,...h.data()}));i=[...i,...j]}return i}catch(t){throw console.error("Error retrieving most discussed projects:",t),t}}async function C(){try{const t=n(c,"projects");return(await a(t)).docs.map(o=>({id:o.id,...o.data()}))}catch(t){throw console.error("Error retrieving all projects:",t),t}}async function b(t){const e=await m(n(c,"projects"),{...t,createdAt:t.createdAt.toISOString(),createdBy:t.createdBy,nameLower:t.name.toLowerCase()});for(const r of t.tags){const o=await S(r);o?await q(o.id):await R(r)}return await A(t.category),{id:e.id,...t}}async function x(t){try{const e=n(c,"projects"),r=d(e,u("createdBy","==",t));return(await a(r)).docs.map(s=>({id:s.id,...s.data()}))}catch(e){return console.error("Error fetching user projects:",e),[]}}async function I(t){try{const e=w(c,"projects",t),r=await P(e);return r.exists()?{id:r.id,...r.data()}:(console.log("Project not found"),null)}catch(e){return console.error("Error fetching project:",e),null}}async function T(t){try{const e=n(c,"projects"),r=d(e,u("category","==",t));return(await a(r)).docs.map(s=>({id:s.id,...s.data()}))}catch(e){return console.error("Error fetching user projects:",e),[]}}async function Q(t){try{if(t.length>0){const e=n(c,"projects"),r=d(e,u("tags","array-contains-any",t));return(await a(r)).docs.map(s=>({id:s.id,...s.data()}))}}catch(e){throw console.error("Error fetching related projects:",e),e}}export{C as a,T as b,B as c,Q as d,I as e,b as f,x as g};
